version: '3.9'
services:
  mysql:
    restart: unless-stopped
    platform: linux/arm64/v8 # for mac
    image: "mysql:8"
    ports:
      - "3307:3306"
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: openchat
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpass
    volumes:
      - database:/var/lib/mysql
    networks:
      - openchat_network

  qdrant:
    image: qdrant/qdrant
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - openchat_network

  web:
     build:
       context: .
       dockerfile: Dockerfile
     ports:
       - "8000:8000"
     volumes:
       - .:/app
       - ./wait-for-it.sh:/app/wait-for-it.sh  # Mount the wait-for-it script
     depends_on:
       - mysql
     env_file:
       - .env.docker
     command: >
       sh -c "./wait-for-it.sh mysql:3306 --timeout=30 -- 
              python manage.py sync_models &&
              python manage.py runserver 0.0.0.0:8000"
     networks:
       - openchat_network
     dns:
       - 8.8.8.8
       - 8.8.4.4

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db  # Change this to match your database server name
    depends_on:
      - mysql
    networks:
      - openchat_network
  
  celery_worker:
     build:
       context: .
       dockerfile: Dockerfile
     container_name: myproject_celery
     volumes:
       - .:/app
     depends_on:
       - web
     env_file:
       - .env.docker
     command: celery -A dj_backend_server worker --loglevel=debug
     networks:
       - openchat_network
     dns:
       - 8.8.8.8
       - 8.8.4.4

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openchat_network

networks:
  openchat_network:

volumes:
  qdrant_storage:
  database:
  redis_data:
